# 3. 리스트
# 3.1. 리스트 형태
a = [] # 비어있는 리스트 선언 
a1 = list() # 비어있는 리스트 선언
b = [1,2,3,4] #숫자를 요소로 갖는 리스트 선언
c = ["1","2","3"] #문자열을 요소로 갖는 리스트 선언
d = [1,2,"3","4"] #숫자와 문자열 모두 요소로 갖는 리스트 선언
e = [['a','b'],['c','d']] #리스트를 리스트로 갖는 리스트 선언(다차원 리스트)

# 3.2. 리스트의 인덱싱
list_index = [1,2,3,4]
list_index[0] #결과 : 1
list_index[0] + list_index[1] #결과 : 3 -> 1과 2를 더한 값

list_index1 = [1,2,[3,4]]
list_index1[0] # 결과 : 1
list_index1[2] # 결과 : [3,4]
list_index1[-1] # 결과 : [3,4]
list_index1[2][0] # 결과 : 3
list_index2 = [1,2,[3,4,[5,6]]]
list_index2[2][2][0] # 결과 : 5 -> 직관적이지 않기 때문에 다차원 리스트는 일반적으로 잘 사용하지 않음.

# 3.3. 리스트 슬라이싱
list_slice = [1,2,3,4,5,6]
list_slice[0:2] # 결과 : [1,2]
list_slice[:2] #결과 : [1,2] -> 인덱스 1까지 출력
list_slice[2:] #결과 : [3,4,5] -> 인덱스 2부터 출력

# 3.4. 리스트 연산
a = [1,2,3]
b = [3,4,5]
a + b # 결과 : [1,2,3,3,4,5]
a * 2 # 결과 : [1,2,3,1,2,3]

# 3.5. 리스트 길이 구하기
list_len = ["a","b","c","d","e"]
len(list_len) #결과 : 5

# 3.6. 리스트 값 수정하기
list_mod = [1,2,3,4]
list_mod[0] = 6 
list_mod # 결과 : [6,2,3,4] 인덱스 [0]의 요소가 1에서 6으로 바뀌었다.

# 3.7. 리스트 값 삭제하기
list_del = [1,2,3,4]
del list_del[2]
list_del # 결과 : [1,2,4] -> 인덱스 [2]의 요소 3이 삭제되었다.
del list_del[1:] # 결과 : [1] -> 인덱스 [0]인 1을 제외하고 인덱스 [1]부터 모두 삭제되었다.

# 3.8. 리스트에 요소 추가
list_add = [1,2,3,4]
list_add.append(5)
list_add # 결과 : [1,2,3,4,5]

# 3.9. 리스트 정렬
list_sort = [2,5,1,3,0,6]
list_sort.sort()
list_sort # 결과 [0, 1, 2, 3, 5, 6]

# 그 외 함수들은 필요시 찾아보면 됨